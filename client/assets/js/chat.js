// ========================
// üü¢ Danh s√°ch t·∫•t c·∫£ ng∆∞·ªùi d√πng (bao g·ªìm c·∫£ b·∫°n b√® v√† ch∆∞a l√† b·∫°n)
// ========================
const allUsersData = [
  { name: "Nguy·ªÖn VƒÉn A", avatar: "", online: true },
  { name: "Tr·∫ßn Th·ªã B", avatar: "", online: false },
  { name: "L√™ Minh C", avatar: "", online: true },
  { name: "Ph·∫°m Qu·ªëc D", avatar: "", online: false },
  { name: "V√µ Th·ªã E", avatar: "", online: true },
  { name: "ƒê·∫∑ng Thanh F", avatar: "", online: false }
];

// ========================
// üü¢ Bi·∫øn to√†n c·ª•c
// ========================
let friendsListData = [];
let activeChatUser = null;

// ========================
// üü¢ Khi trang load xong
// ========================
document.addEventListener("DOMContentLoaded", function () {
  const searchInput = document.querySelector("#searchInput");
  const searchResults = document.querySelector("#searchResults");
  const friendsList = document.querySelector("#friendsList");

  const chatPanel = document.querySelector("#chatPanel");
  const chatUserName = document.querySelector("#chatUserName");
  const chatUserStatus = document.querySelector("#chatUserStatus");
  const chatUserAvatar = document.querySelector("#chatUserAvatar");
  const chatMessages = document.querySelector("#chatMessages");
  const chatInputContainer = document.querySelector("#chatInputContainer");

  // ====== 1Ô∏è‚É£ G·ªåI API DANH S√ÅCH B·∫†N B√à ======
  fetch("http://localhost:8080/api/friends")
    .then(res => res.json())
    .then(friends => {
      friendsListData = friends;
      renderFriends(friends);

      // ====== 2Ô∏è‚É£ X·ª¨ L√ù T√åM KI·∫æM NG∆Ø·ªúI D√ôNG ======
      searchInput.addEventListener("input", function () {
        const keyword = searchInput.value.toLowerCase().trim();

        if (keyword === "") {
          searchResults.innerHTML = "";
          return;
        }

        // üîç T√¨m trong to√†n b·ªô ng∆∞·ªùi d√πng (bao g·ªìm c·∫£ b·∫°n b√® v√† ch∆∞a l√† b·∫°n)
        const results = allUsersData.filter(u =>
          u.name.toLowerCase().includes(keyword)
        );

        renderSearchResults(results);
      });
    })
    .catch(err => {
      console.error("‚ö†Ô∏è L·ªói khi t·∫£i danh s√°ch b·∫°n b√®:", err);
      friendsList.innerHTML = `<p style="color:red;">Kh√¥ng th·ªÉ t·∫£i danh s√°ch b·∫°n b√®.</p>`;
    });

  // ====== 3Ô∏è‚É£ H√ÄM HI·ªÇN TH·ªä DANH S√ÅCH B·∫†N B√à ======
  function renderFriends(list) {
    friendsList.innerHTML = "";
    if (!list || list.length === 0) {
      friendsList.innerHTML = "<p>Ch∆∞a c√≥ b·∫°n b√® n√†o.</p>";
      return;
    }

    list.forEach(friend => {
      const item = document.createElement("div");
      item.classList.add("friend-item");
      item.innerHTML = `
        <div class="friend-avatar">
          <img src="${friend.avatar || '../assets/images/default-avatar.svg'}" alt="Avatar">
          <span class="status ${friend.online ? 'online' : 'offline'}"></span>
        </div>
        <div class="friend-info">
          <h4>${friend.name}</h4>
          <p>${friend.online ? 'ƒêang ho·∫°t ƒë·ªông' : 'Offline'}</p>
        </div>
      `;

      // Khi nh·∫•n v√†o b·∫°n b√® ‚Üí m·ªü khung chat
      item.addEventListener("click", function () {
        openChat(friend);
      });

      friendsList.appendChild(item);
      item.addEventListener("click", function () {
        // 1Ô∏è‚É£ Chuy·ªÉn sang tab Messages (Tin nh·∫Øn)
        const messagesTab = document.querySelector('[data-section="messages"]');
        if (messagesTab) messagesTab.click();

        // 2Ô∏è‚É£ Hi·ªÉn th·ªã t√™n b·∫°n b√® ƒëang chat (ho·∫∑c m·ªü ƒëo·∫°n chat c≈©)
        const chatHeader = document.querySelector(".chat-header h3");
        if (chatHeader) chatHeader.textContent = friend.name;

        // 3Ô∏è‚É£ C√≥ th·ªÉ reset n·ªôi dung khung chat c≈©
        const chatMessages = document.querySelector(".chat-messages");
        if (chatMessages) {
            chatMessages.innerHTML = `<div class="message system">üí¨ B·∫Øt ƒë·∫ßu tr√≤ chuy·ªán v·ªõi <b>${friend.name}</b></div>`;
        }
        });
    });
  }

  // ====== 4Ô∏è‚É£ H√ÄM HI·ªÇN TH·ªä K·∫æT QU·∫¢ T√åM KI·∫æM ======
  function renderSearchResults(results) {
    searchResults.innerHTML = "";
    if (!results || results.length === 0) {
      searchResults.innerHTML = "<p>Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng n√†o.</p>";
      return;
    }

    results.forEach(user => {
      const div = document.createElement("div");
      div.classList.add("search-result-item");

      const isFriend = friendsListData.some(f => f.name === user.name);

      div.innerHTML = `
        <div class="result-avatar">
          <img src="${user.avatar || '../assets/images/default-avatar.svg'}" alt="Avatar">
        </div>
        <div class="result-info">
          <h4>${user.name}</h4>
          ${
            isFriend
              ? '<span style="color: gray; font-size: 13px;">ƒê√£ l√† b·∫°n b√®</span>'
              : '<button class="add-friend-btn">+ K·∫øt b·∫°n</button>'
          }
        </div>
      `;

      // N·∫øu l√† b·∫°n r·ªìi ‚Üí click ƒë·ªÉ m·ªü chat
      if (isFriend) {
        div.addEventListener("click", () => openChat(user));
      }

      searchResults.appendChild(div);
    });
  }

  // ====== 5Ô∏è‚É£ H√ÄM M·ªû KHUNG CHAT ======
  function openChat(user) {
    activeChatUser = user;

    // C·∫≠p nh·∫≠t th√¥ng tin ng∆∞·ªùi ƒëang chat
    chatUserName.textContent = user.name;
    chatUserStatus.textContent = user.online ? "ƒêang ho·∫°t ƒë·ªông" : "Offline";
    chatUserAvatar.src = user.avatar || "../assets/images/default-avatar.svg";

    // ·∫®n welcome message, hi·ªÉn th·ªã √¥ nh·∫≠p chat
    chatMessages.innerHTML = "";
    chatInputContainer.style.display = "block";

    const welcomeMsg = document.createElement("div");
    welcomeMsg.classList.add("system-message");
    welcomeMsg.textContent = `üí¨ ƒêang tr√≤ chuy·ªán v·ªõi ${user.name}`;
    chatMessages.appendChild(welcomeMsg);
  }
});
